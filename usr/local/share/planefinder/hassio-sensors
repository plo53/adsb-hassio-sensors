#!/bin/bash

# Aircraft   REST api : http://localhost:30053/ajax/aircraft
# Statistics REST api : http://localhost:30053/ajax/stats

doit_planefinder(){

  PF_AIRCRAFT=$(curl -s http://localhost:30053/ajax/aircraft)

  PF_AIRCRAFT_JSON=$(echo "$PF_AIRCRAFT" | jq '{"state": [ .aircraft[] ] | length ,
                     attributes: {"friendly_name": "Planefinder Status",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "aircraft",
                                  "unique_id": "planefinder_total"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_AIRCRAFT_JSON" http://supervisor/core/api/states/sensor.planefinder_status

  PF_AIRCRAFT_ADSB_JSON=$(echo "$PF_AIRCRAFT" | jq '{"state": [ .aircraft[] | select(.is_mlat == false) ] | length ,
                     attributes: {"friendly_name": "Planefinder ADS-B",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "aircraft",
                                  "unique_id": "planefinder_adsb"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_AIRCRAFT_ADSB_JSON" http://supervisor/core/api/states/sensor.planefinder_adsb

  PF_AIRCRAFT_MLAT_JSON=$(echo "$PF_AIRCRAFT" | jq '{"state": [ .aircraft[] | select(.is_mlat == true) ] | length ,
                     attributes: {"friendly_name": "Planefinder MLAT",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "aircraft",
                                  "unique_id": "planefinder_mlat"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_AIRCRAFT_MLAT_JSON" http://supervisor/core/api/states/sensor.planefiner_mlat


  PF_STATS=$(curl -s http://localhost:30053/ajax/stats)

  PF_BAND_JSON=$(echo "$PF_STATS" | jq '{"state": ( .receiver_bytes_in_ps / 1000) ,
                     attributes: {"friendly_name": "Planefinder Receiver Bandwidth",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "Kb/s",
                                  "unique_id": "pf_bandwidth"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_BAND_JSON" http://supervisor/core/api/states/sensor.planefinder_bandwidth

  PF_MODES_JSON=$(echo "$PF_STATS" | jq '{"state": .total_modes_packets_ps ,
                     attributes: {"friendly_name": "Planefinder Mode-S Rate",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "packet/s",
                                  "unique_id": "pf_mode_s_rate"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_MODES_JSON" http://supervisor/core/api/states/sensor.planefinder_mode_s_rate

  PF_MODEAC_JSON=$(echo "$PF_STATS" | jq '{"state": .total_modeac_packets_ps ,
                     attributes: {"friendly_name": "Planefinder Mode-AC Rate",
                                  "icon": "mdi:airplane",
                                  "state_class": "measurement",
                                  "unit_of_measurement": "packet/s",
                                  "unique_id": "pf_mode_ac_rate"} }' )

  curl -s -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" -H "Content-Type: application/json" \
    -d "$PF_MODEAC_JSON" http://supervisor/core/api/states/sensor.planefinder_mode_ac_rate
}

echo "Starting PlaneFinder hassio sensors api"

while sleep 30; do
  doit_planefinder;
done
